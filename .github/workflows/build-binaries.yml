name: Build Bun Executables

on:
  push:
    branches: [ master ]
    tags:
      - "v*"
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: ytm-remote-server-linux
            binary_name: ytm-remote-server
          - os: windows-latest
            artifact_name: ytm-remote-server-windows
            binary_name: ytm-remote-server.exe
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Build client bundle
        run: bun run build:client

      - name: Compile server binary
        run: |
          mkdir -p dist/bin
          bun build src/server/index.ts --compile --outfile dist/bin/${{ matrix.binary_name }}

      - name: Package release asset
        shell: bash
        run: |
          set -euo pipefail
          package_dir="release/${{ matrix.artifact_name }}"
          rm -rf "$package_dir"
          mkdir -p "$package_dir"
          cp dist/bin/${{ matrix.binary_name }} "$package_dir/"
          cp -r public/dist "$package_dir/client"
          tar -czf "${{ matrix.artifact_name }}.tar.gz" -C release "${{ matrix.artifact_name }}"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            dist/bin/${{ matrix.binary_name }}
            public/dist
            ${{ matrix.artifact_name }}.tar.gz
          if-no-files-found: error

      - name: Publish GitHub release asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{ matrix.artifact_name }}.tar.gz
          artifactContentType: application/gzip
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
